<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>DataHadi</title>
    <link>https://miftahulhadii.github.io/</link>
    <atom:link href="https://miftahulhadii.github.io/project.xml" rel="self" type="application/rss+xml"/>
    <description>DataHadi
</description>
    <image>
      <title>DataHadi</title>
      <url>https://miftahulhadii.github.io/images/web-logo.png</url>
      <link>https://miftahulhadii.github.io/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Sat, 28 Jan 2023 00:00:00 +0000</lastBuildDate>
    <item>
      <title>Bike Share Marketing Campaigns Analysis using R</title>
      <dc:creator>Miftahul Hadi</dc:creator>
      <link>https://miftahulhadii.github.io/posts/2023-01-29-bike-share-analysis-using-r</link>
      <description>


&lt;style type="text/css"&gt;
script src = "https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"
&lt;/style&gt;
&lt;script type="text/javascript"&gt;
 $(document).ready(function() {
    $('body').prepend('&lt;div class=\"zoomDiv\"&gt;&lt;img src=\"\" class=\"zoomImg\"&gt;&lt;/div&gt;');
    // onClick function for all plots (img's)
    $('img:not(.zoomImg)').click(function() {
      $('.zoomImg').attr('src', $(this).attr('src')).css({width: '100%'});
      $('.zoomDiv').css({opacity: '1', width: 'auto', border: '1px solid white', borderRadius: '5px', position: 'fixed', top: '50%', left: '50%', marginRight: '-50%', transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 50px #888888', zIndex: '50', overflow: 'auto', maxHeight: '100%'});
    });
    // onClick function for zoomImg
    $('img.zoomImg').click(function() {
      $('.zoomDiv').css({opacity: '0', width: '0%'}); 
    });
  });
&lt;/script&gt;
&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;h3 id="scenario"&gt;Scenario&lt;/h3&gt;
&lt;p&gt;Welcome to the Cyclistic bike-share analysis case study!&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img
src="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_images/image1_hH9B4gs.jpg"
alt="" /&gt;
&lt;p class="caption"&gt;&lt;strong&gt;Fig. 1.&lt;/strong&gt; Bike-share station&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In this case study, I am here as a junior data analyst working in the
marketing team at Cyclistic, a fictional bike-share company in Chicago.
Lily Moreno, the marketing director, believes that the company’s future
success depends on maximizing the number of annual memberships.&lt;/p&gt;
&lt;p&gt;To ride a Cylcistic bike, you can unlock it from one station and
return it to any other station in the system. There are a few pricing
plans to purchase:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single-ride passes&lt;/li&gt;
&lt;li&gt;Full-day passes&lt;/li&gt;
&lt;li&gt;Annual memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Customers who purchase single-ride or full-day passes are referred to
as casual riders. Customers who purchase annual memberships are
Cyclistic members.&lt;/p&gt;
&lt;p&gt;Our task here is to understand how casual riders and annual members
use Cyclistic bikes differently. The marketing team will design a new
marketing strategy from these insights to convert casual riders into
annual members. But, Cyclistic executives must approve your
recommendations with compelling data insights and visualization.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;More about company’s details&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;In 2016, Cyclistic launched a successful bike-share offering. Since
then, the program has grown to a fleet of 5,824 bicycles that are
geo-tracked and locked into a network of 692 stations across Chicago.
The bikes can be unlocked from one station and returned to any other
station in the system at any time.&lt;/p&gt;
&lt;p&gt;Until now, Cyclistic’s marketing strategy relied on building general
awareness and appealing to broad consumer segments. One approach that
helped make these things possible was the flexibility of its pricing
plans: single-ride passes, full-day passes, and annual memberships.
Customers who purchase single-ride or full-day passes are referred to as
casual riders. Customers who purchase annual memberships are Cyclistic
members.&lt;/p&gt;
&lt;p&gt;Cyclistic’s finance analysts have concluded that annual members are
much more profitable than casual riders. Although the pricing
flexibility helps Cyclistic attract more customers, Moreno believes that
maximizing the number of annual members will be key to future growth.
Rather than creating a marketing campaign targeting all-new customers,
Moreno believes there is a good chance to convert casual riders into
members. She notes that casual riders are already aware of the Cyclistic
program and have chosen Cyclistic for their mobility needs.&lt;/p&gt;
&lt;p&gt;Moreno has set a clear goal: Design marketing strategies aimed at
converting casual riders into annual members. In order to do that,
however, the marketing analyst team needs to better understand how
annual members and casual riders differ, why casual riders would buy a
membership, and how digital media could affect their marketing tactics.
Moreno and her team are interested in analyzing the Cyclistic historical
bike trip data to identify trends.&lt;/p&gt;
&lt;/details&gt;
&lt;h3 id="objectives"&gt;Objectives&lt;/h3&gt;
&lt;p&gt;Identify how casual and members riders use Cyclists bikes differently
to maximize the number of annual memberships.&lt;/p&gt;
&lt;h2 id="preparation"&gt;Preparation&lt;/h2&gt;
&lt;p&gt;Here are a few tools used in this analysis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://posit.co/"&gt;RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The library used in R: &lt;code&gt;tidyverse&lt;/code&gt;, &lt;code&gt;ggplot2&lt;/code&gt;,
&lt;code&gt;lubridate&lt;/code&gt;, &lt;code&gt;readxl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Dataset
&lt;ul&gt;
&lt;li&gt;&lt;a
href="https://divvy-tripdata.s3.amazonaws.com/index.html"&gt;Cyclistic’s
historical trip data in 2022&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.divvybikes.com/data-license-agreement"&gt;The
license&lt;/a&gt; has been made available by Motivate International Inc.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="processing-the-data"&gt;Processing the Data&lt;/h2&gt;
&lt;p&gt;Here’s a step by step of processing raw data to be prepared for
analysis:&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Import your data&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;To connect the data to the R environment, the step as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, download the previous 12 months’ Cyclistic trips in .csv
format.&lt;/li&gt;
&lt;li&gt;Second, convert the data from .csv to xlsx format. Store it in a new
folder (e.g. “~/bike-project/xlsx-version”)&lt;/li&gt;
&lt;li&gt;Next, load the library used in this analysis and set the main
directory where the data is stored.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)
library(ggplot2)
library(lubridate)
library(readxl)
#setwd(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version&amp;quot;)
#setwd is not used because of web development circumstances&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Using the &lt;code&gt;readxl&lt;/code&gt; library, load the data and give the
name each month.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;m1_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202201-divvy-tripdata.xlsx&amp;quot;)
m2_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202202-divvy-tripdata.xlsx&amp;quot;)
m3_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202203-divvy-tripdata.xlsx&amp;quot;)
m4_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202204-divvy-tripdata.xlsx&amp;quot;)
m5_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202205-divvy-tripdata.xlsx&amp;quot;)
m6_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202206-divvy-tripdata.xlsx&amp;quot;)
m7_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202207-divvy-tripdata.xlsx&amp;quot;)
m8_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202208-divvy-tripdata.xlsx&amp;quot;)
m9_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202209-divvy-tripdata.xlsx&amp;quot;)
m10_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202210-divvy-tripdata.xlsx&amp;quot;)
m11_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202211-divvy-tripdata.xlsx&amp;quot;)
m12_2022 &amp;lt;- read_xlsx(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version/202212-divvy-tripdata.xlsx&amp;quot;)

#(&amp;quot;C:/Users/LENOVO/Documents/bike-project/xlsx-version&amp;quot;) still used because of web development circumstances&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Make columns consistent and merge into a single data frame&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;To make columns ready to analysis, here’s the step:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firstly, check the columns name of each months trips data.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;colnames(m1_2022)
colnames(m2_2022)
colnames(m3_2022)
colnames(m4_2022)
colnames(m5_2022)
colnames(m6_2022)
colnames(m7_2022)
colnames(m8_2022)
colnames(m9_2022)
colnames(m10_2022)
colnames(m11_2022)
colnames(m12_2022)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;After that, check the data types.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;str(m1_2022)
str(m2_2022)
str(m3_2022)
str(m4_2022)
str(m5_2022)
str(m6_2022)
str(m7_2022)
str(m8_2022)
str(m9_2022)
str(m10_2022)
str(m11_2022)
str(m12_2022)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Change the data types if you find a column that differs from the
rest of the columns in another file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lastly, combine all sheets into one single data frame and named
it &lt;code&gt;all_trips&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips &amp;lt;- bind_rows(m1_2022, m2_2022, m3_2022, 
                       m4_2022, m5_2022, m6_2022, 
                       m7_2022, m8_2022, m9_2022, 
                       m10_2022, m11_2022, m12_2022)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Clean the data&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;After combine all month trips data, we can clean them to be ready to
analysis. Here’s the step:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove a few unused column.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips &amp;lt;- all_trips %&amp;gt;%
  select(-c(start_lat, start_lng, end_lat, end_lng))&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Check the data frame attributes.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;colnames(all_trips)   #list of column names
nrow(all_trips)       #total row
dim(all_trips)        #total dimension
head(all_trips)       #view first 6 rows
str(all_trips)        #see list of data types
summary(all_trips)    #statistical summary&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Check if there’s any problem in memberships column&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;unique(all_trips$member_casual) #for unique value&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] &amp;quot;casual&amp;quot; &amp;quot;member&amp;quot; NA      &lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;table(all_trips$member_casual)  #total unique value&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
 casual  member 
2322031 3345683 &lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;As we know, memberships program in Cyclists only have two, casual
and members riders. So, if there’s any dualism value (e.g. subscriber
instead of members), change the value.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips &amp;lt;- all_trips %&amp;gt;% 
mutate(member_casual = recode(member_casual, &amp;quot;Subscriber&amp;quot; = &amp;quot;member&amp;quot;, &amp;quot;Customer&amp;quot; = &amp;quot;casual&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Add columns that list the date, month, day, and year of each
ride.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips$date &amp;lt;- as.Date(all_trips$started_at) #The default format is yyyy-mm-dd
all_trips$month &amp;lt;- format(as.Date(all_trips$date), &amp;quot;%m&amp;quot;)
all_trips$day &amp;lt;- format(as.Date(all_trips$date), &amp;quot;%d&amp;quot;)
all_trips$year &amp;lt;- format(as.Date(all_trips$date), &amp;quot;%Y&amp;quot;)
all_trips$day_of_week &amp;lt;- format(as.Date(all_trips$date), &amp;quot;%A&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Make a new column that shows different time of started ride to ended
ride.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips$ride_length &amp;lt;- difftime(all_trips$ended_at,all_trips$started_at)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;After creating a new column, inspect the columns data types to make
sure.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;str(all_trips)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;After checking the data types, we found that
&lt;code&gt;ride_length&lt;/code&gt; column still not in numeric types.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;is.numeric(all_trips$ride_length) #to check if the ride length was in number/factor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips$ride_length &amp;lt;- as.numeric(all_trips$ride_length)
is.numeric(all_trips$ride_length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;We found that there is two &lt;code&gt;ride_length&lt;/code&gt; column. Remove
bad data to make it consistent.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips &amp;lt;- select(all_trips, -c(ride_of_length))&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;After creating a &lt;code&gt;ride length&lt;/code&gt; column, there’s some data
that peculiar (minus ride length). Remove it using &lt;code&gt;subset&lt;/code&gt;
function, because its a bad data.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;all_trips_v2 &amp;lt;- subset(all_trips, ride_length&amp;gt;0)     #include only ride length over 0 s&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Conduct descriptive analysis&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;In order to identify trends and relationships in the data, we can
conduct descriptive analysis. Here’s the steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, we can summarize the rider behavior based on
&lt;code&gt;ride_length&lt;/code&gt; column. For example longest &amp;amp; shortest ride
and average ride length.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;mean(all_trips_v2$ride_length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 1166.846&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;median(all_trips_v2$ride_length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 617&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;max(all_trips_v2$ride_length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 2483235&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;min(all_trips_v2$ride_length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;summary(all_trips_v2$ride_length)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
      1     349     617    1167    1108 2483235 &lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Compare members and casual riders based on average ride length or
number of rides.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;member_compare &amp;lt;- all_trips_v2 %&amp;gt;%                #call dataset
  drop_na(member_casual) %&amp;gt;%                      #drop empty data
  group_by(membership_type = member_casual) %&amp;gt;%   #group the data by members type
  summarize(average_ride_length = mean(ride_length), number_of_rides = n())  #summarize them with avg and number of rides

View(member_compare)      #view new data frame&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Do a comparison of average ride time by each
&lt;code&gt;day_of_week&lt;/code&gt; column.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;#Reorder the levels of day_of_week column with Sunday as the first

all_trips_v2$day_of_week &amp;lt;- ordered(all_trips_v2$day_of_week, levels = c(&amp;quot;Sunday&amp;quot;, &amp;quot;Monday&amp;quot;, &amp;quot;Tuesday&amp;quot;, &amp;quot;Wednesday&amp;quot;, &amp;quot;Thursday&amp;quot;, &amp;quot;Friday&amp;quot;, &amp;quot;Saturday&amp;quot;))

#Summarize them based on day of the week

avg_member_per_day &amp;lt;- all_trips_v2 %&amp;gt;%
  drop_na(member_casual) %&amp;gt;% 
  group_by(membership_type = member_casual, day_of_week) %&amp;gt;% 
  summarize(average_ride_length = mean(ride_length))

View(avg_member_per_day)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Lastly, let’s count the number of rides by members type and weekday
using &lt;code&gt;ride_id&lt;/code&gt; column.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;### first check the ride_id duplicate to count number of ride
sum(duplicated(all_trips_v2$ride_id))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class="r"&gt;&lt;code&gt;### if zero, lets goo
membertype_per_day &amp;lt;- all_trips_v2 %&amp;gt;%
  drop_na(member_casual) %&amp;gt;% 
  group_by(membership_type = member_casual, day_of_week) %&amp;gt;% 
  summarise(number_of_rides = n(), average_ride_length = mean(ride_length)) %&amp;gt;% #n() for counting 
  arrange(day_of_week)

View(membertype_per_day)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Design a data visualization&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;For the next phase, we visualize what has been describe in the
analysis process. Here’s the step:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, we can visualize number of rides by membership type. This
will helps us to understand which riders have the highest number of
rides.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;ggplot(data = membertype_per_day, mapping = aes(x = day_of_week, y = (number_of_rides/1000), fill = membership_type)) + 
  geom_col(position = &amp;quot;dodge&amp;quot;) +
  labs(title = &amp;quot;Number of Rides by Membership Type in 2022&amp;quot;, 
       x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Rides&amp;lt;br&amp;gt;&amp;lt;span style = &amp;#39;font-size:8pt&amp;#39;&amp;gt;(in thousand)&amp;lt;/span&amp;gt;&amp;quot;, 
       fill = &amp;quot;Membership Type&amp;quot;)+
  theme(axis.title.y = ggtext::element_markdown())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file31d45a286f40_files/figure-html/STEP%205%20-%20Number%20of%20rides%20viz-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;#save the data viz in .png format
ggsave(filename = &amp;quot;number-of-rides.png&amp;quot;, width = 6.86, height = 4.11, dpi=300)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Next, visualize the average duration by members type each day of the
week.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;ggplot(data = membertype_per_day, mapping = aes(x = day_of_week, y = average_ride_length, fill = membership_type)) + 
  geom_col(position = &amp;quot;dodge&amp;quot;) +
  labs(title = &amp;quot;Average Duration by Membership Type in 2022&amp;quot;, 
       x = &amp;quot;&amp;quot;, y = &amp;quot;Average Duration&amp;lt;br&amp;gt;&amp;lt;span style = &amp;#39;font-size:8pt&amp;#39;&amp;gt;(in second)&amp;lt;/span&amp;gt;&amp;quot;, 
       fill = &amp;quot;Membership Type&amp;quot;)+
  theme(axis.title.y = ggtext::element_markdown())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file31d45a286f40_files/figure-html/STEP%205%20-%20Average%20ride%20viz-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;#save the data viz in .png format
ggsave(filename = &amp;quot;avg-duration.png&amp;quot;, width = 6.86, height = 4.11, dpi=300)&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To find a potential days to promote memberships program to casual
riders, we need to identify which day with the most number of rides by
casual riders.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r"&gt;&lt;code&gt;#filter the dataframe by only casual riders
highest_day_nor &amp;lt;- membertype_per_day %&amp;gt;% 
  filter(membership_type == &amp;quot;casual&amp;quot;) %&amp;gt;% 
  arrange(desc(number_of_rides))

  ggplot(data = highest_day_nor, mapping = aes(x = (number_of_rides/1000), y = (day_of_week = reorder(day_of_week, number_of_rides)))) + 
    geom_col() +
    labs(title = &amp;quot;Number of Rides Per Day by Casual Riders&amp;quot;, 
        x = &amp;quot;Number of Rides&amp;lt;br&amp;gt;&amp;lt;span style = &amp;#39;font-size:8pt&amp;#39;&amp;gt;(in thousand)&amp;lt;/span&amp;gt;&amp;quot;, y = &amp;quot;&amp;quot;)+
    theme(axis.title.x = ggtext::element_markdown())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file31d45a286f40_files/figure-html/STEP%205%20-%20Number%20of%20rides%20by%20casual-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;#save the graph  
ggsave(filename = &amp;quot;high-nor-day.png&amp;quot;, width = 6.86, height = 4.11, dpi=300)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;
&lt;summary&gt;
&lt;b&gt;Export a summary file for further analysis&lt;/b&gt;
&lt;/summary&gt;
&lt;p&gt;To export a summary data frame into a csv format, here’s the code&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;write.csv(member_compare, file = &amp;quot;all_member_compare.csv&amp;quot;)
write.csv(membertype_per_day, file = &amp;quot;by_day_member_compare.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;h2 id="analysis"&gt;Analysis&lt;/h2&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;h2 id="appendix"&gt;Appendix&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Presentable data analysis → &lt;a
href="https://docs.google.com/presentation/d/1wpt7qPzR-BEXo2--5i8QVYMetcrwlUB80-9rKWjD6qk/edit#slide=id.p"&gt;PPT&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data Analysis Process in R scripts → &lt;a
href="https://www.kaggle.com/code/miftahulhadii/2022-bike-share-analysis-case-study"&gt;R
Code&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a
href="https://www.coursera.org/professional-certificates/google-data-analytics"&gt;Google
Data Analytics Coursera&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>aa67dda9fbd63b31a0b32f1f813c93ae</distill:md5>
      <category>R</category>
      <category>Marketing Analysis</category>
      <category>Data Visualization</category>
      <guid>https://miftahulhadii.github.io/posts/2023-01-29-bike-share-analysis-using-r</guid>
      <pubDate>Sat, 28 Jan 2023 00:00:00 +0000</pubDate>
      <media:content url="https://storage.googleapis.com/gweb-uniblog-publish-prod/original_images/image1_hH9B4gs.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>World CO₂ Emissions Growth with Dashboard using Tableau</title>
      <dc:creator>Miftahul Hadi</dc:creator>
      <link>https://miftahulhadii.github.io/posts/2022-12-20-world-co2-emissions-growth-using-tableau</link>
      <description>A guide to create an effective and clear dashboard for better understand average CO₂ in the world using CO₂ dataset.</description>
      <category>Tableau</category>
      <category>Data Visualization</category>
      <guid>https://miftahulhadii.github.io/posts/2022-12-20-world-co2-emissions-growth-using-tableau</guid>
      <pubDate>Tue, 20 Dec 2022 00:00:00 +0000</pubDate>
      <media:content url="https://i.ytimg.com/vi/9OX9ohTcC1w/maxresdefault.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>Fitness Trackers e-Commerce in Indian Market</title>
      <dc:creator>Miftahul Hadi</dc:creator>
      <link>https://miftahulhadii.github.io/posts/2022-12-13-fitness-trackers-e-commerce-in-indian-market</link>
      <description>A financial analysis about fitness trackers device sales in Indian market on 2022.</description>
      <category>R</category>
      <category>Financial Analysis</category>
      <category>Data Visualization</category>
      <guid>https://miftahulhadii.github.io/posts/2022-12-13-fitness-trackers-e-commerce-in-indian-market</guid>
      <pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate>
      <media:content url="https://phoneradar.com/wp-content/uploads/2014/09/GetActive-Tapp.jpg" medium="image" type="image/jpeg"/>
    </item>
  </channel>
</rss>
